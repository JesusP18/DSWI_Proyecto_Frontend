@model IEnumerable<DSWI_Proyecto_Frontend.Models.Proyecto>

@{
    ViewData["Title"] = "ListarProyectos";
}

<h1>Lista de Proyectos</h1>

<div class="row">
    <div class="col-md-2">
        <p>
            <a class="btn btn-success" asp-action="CrearProyecto">Crear Nuevo Proyecto</a>
        </p>
    </div>
    <div class="col-md-2">
        <p class="text-left">
            <a class="btn btn-primary" asp-action="ExportarExcel">Exportar Excel</a>
        </p>
    </div>
</div>

<style>
    .table-responsive {
        overflow-x: auto;
    }

    .table {
        width: 100%;
        max-width: 100%;
        margin-bottom: 1rem;
        background-color: transparent;
    }
</style>
<div class="card" style="box-shadow: 5px 5px 20px rgba(0,0,0,0.4); padding: 20px">
    <table class="table table-responsive table-striped table-hover">
        <thead>
            <tr>
                <th>
                    ID
                </th>
                <th>
                    Nombre
                </th>
                <th>
                    Descripción
                </th>
                <th>
                    Tareas
                </th>
                <th>
                    Categoría
                </th>
                <th>
                    Estado
                </th>
                <th>
                    Prioridad
                </th>
                <th>
                    Complejidad
                </th>
                <th>
                    F. Incio
                </th>
                <th>
                    F. Fin
                </th>
                <th>
                    Mes
                </th>
                <th>
                    Solicitante
                </th>
                <th>
                    Área
                </th>
                <th>
                    Tipo
                </th>
                <th>
                    Presupuesto
                </th>
                <th>
                    Asignado
                </th>
                <th>
                    Porcentaje
                </th>
                <th>
                    Comentarios
                </th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.IdProyecto)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NombreProyecto)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DescripcionProyecto)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DescripcionTarea)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DescripcionCategoria)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DescripcionEstado)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DescripcionPrioridad)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DescripcionComplejidad)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FechaInicio)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FechaFin)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Mes)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NombreUsuario)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DescripcionArea)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DescripcionTipo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Presupuesto)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Asignado)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Porcentaje)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Comentarios)
                    </td>
                    <td>
                        @Html.ActionLink("Editar", "EditarProyecto", new {  id=item.IdProyecto  }, new {@class = "btn btn-warning" })
                        @*@Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ })*@
                        @Html.ActionLink("Eliminar", "EliminarProyecto", new {  id=item.IdProyecto  }, new {@class = "btn btn-danger" })
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@**@
<div class="row mt-2">
    <div class="card">
        <div class="card-header">Cantidad de Cambios de Estado</div>
        <div class="card-body">
            <canvas id="chartCambio" style="max-height:300px"></canvas>
        </div>
    </div>

</div>
<div class="row mt-2">
    <div class="card">
        <div class="card-header">Estado de Proyectos</div>
        <div class="card-body">
            <canvas id="chartEstado" style="max-height:300px"></canvas>
        </div>
    </div>

</div>

@section Scripts{
    <script>
        function resumenEstado() {
            fetch("resumenEstado").then((response) => {
                return response.ok ? response.json() : Promise.reject(response);
            }).then((dataJson) => {
                console.log(dataJson)

                const labels = dataJson.map((item) => {return item.descripcion })
                const values = dataJson.map((item) => { return item.idEstado })

                console.log(labels);
                console.log(values);

                const data = {
                    labels: labels,
                    datasets: [{
                        label: 'Cantidad',
                        data: values,
                        backgroundColor: [
                            'rgb(255, 99, 132)',
                            'rgb(54, 162, 235)',
                            'rgb(255, 205, 86)',
                            "#01AF40",
                            'rgb(153, 102, 255)',
                            'rgb(201, 203, 207)'
                        ],
                        hoverOffset: 4
                    }]
                };

                const config = {
                    type: 'doughnut',
                    data: data,
                };

                const canvasDona = document.getElementById("chartEstado");
                const graficoDona = new Chart(canvasDona, config);

            }).catch((error) => {
                console.log(error);
            })
        }

        function resumenMes() {
            fetch("resumenMes").then((response) => {
                return response.ok ? response.json() : Promise.reject(response);
            }).then((dataJson) => {
                console.log(dataJson)

                const labels = dataJson.map((item) => { return item.descripcion })
                const values = dataJson.map((item) => { return item.idEstado })

                console.log(labels);
                console.log(values);

                const data = {
                    labels: labels,
                    datasets: [{
                        label: 'cantidad',
                        data: values,
                        backgroundColor: 'rgb(54, 162, 235)',
                        borderWidth: 1
                    }]
                };

                const config = {
                    type: 'bar',
                    data: data,
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    },
                };

                const canvasBarras = document.getElementById("chartCambio");
                const graficoBarras = new Chart(canvasBarras, config);

            }).catch((error) => {
                console.log(error);
            })
        }

        $(document).ready(() => {
            resumenEstado()
            resumenMes()
        })
    
    </script>
    }